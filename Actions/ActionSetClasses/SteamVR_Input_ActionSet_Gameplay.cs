//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public class SteamVR_Input_ActionSet_Gameplay : Valve.VR.SteamVR_ActionSet
    {
        
        public virtual SteamVR_Action_Pose Pose
        {
            get
            {
                return SteamVR_Actions.gameplay_Pose;
            }
        }
        
        public virtual SteamVR_Action_Skeleton SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.gameplay_SkeletonLeftHand;
            }
        }
        
        public virtual SteamVR_Action_Skeleton SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.gameplay_SkeletonRightHand;
            }
        }
        
        public virtual SteamVR_Action_Boolean HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.gameplay_HeadsetOnHead;
            }
        }
        
        public virtual SteamVR_Action_Boolean SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.gameplay_SnapTurnLeft;
            }
        }
        
        public virtual SteamVR_Action_Boolean SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.gameplay_SnapTurnRight;
            }
        }
        
        public virtual SteamVR_Action_Vector2 LS_Move
        {
            get
            {
                return SteamVR_Actions.gameplay_LS_Move;
            }
        }
        
        public virtual SteamVR_Action_Single RT_Fire
        {
            get
            {
                return SteamVR_Actions.gameplay_RT_Fire;
            }
        }
        
        public virtual SteamVR_Action_Boolean A_Jump
        {
            get
            {
                return SteamVR_Actions.gameplay_A_Jump;
            }
        }
        
        public virtual SteamVR_Action_Boolean X_Interact_Reload
        {
            get
            {
                return SteamVR_Actions.gameplay_X_Interact_Reload;
            }
        }
        
        public virtual SteamVR_Action_Boolean Y_SwitchWeapons
        {
            get
            {
                return SteamVR_Actions.gameplay_Y_SwitchWeapons;
            }
        }
        
        public virtual SteamVR_Action_Boolean LB_PrimarySkill
        {
            get
            {
                return SteamVR_Actions.gameplay_LB_PrimarySkill;
            }
        }
        
        public virtual SteamVR_Action_Boolean RB_SecondarySkill
        {
            get
            {
                return SteamVR_Actions.gameplay_RB_SecondarySkill;
            }
        }
        
        public virtual SteamVR_Action_Boolean B_Dash_ReturnUI
        {
            get
            {
                return SteamVR_Actions.gameplay_B_Dash_ReturnUI;
            }
        }
        
        public virtual SteamVR_Action_Single LT_WeaponSkill
        {
            get
            {
                return SteamVR_Actions.gameplay_LT_WeaponSkill;
            }
        }
        
        public virtual SteamVR_Action_Boolean DPadL_InterruptCharging
        {
            get
            {
                return SteamVR_Actions.gameplay_DPadL_InterruptCharging;
            }
        }
        
        public virtual SteamVR_Action_Boolean DPadD_SwitchFireMode
        {
            get
            {
                return SteamVR_Actions.gameplay_DPadD_SwitchFireMode;
            }
        }
        
        public virtual SteamVR_Action_Boolean DPadR_TeamInformation
        {
            get
            {
                return SteamVR_Actions.gameplay_DPadR_TeamInformation;
            }
        }
        
        public virtual SteamVR_Action_Boolean DPadU_Ping
        {
            get
            {
                return SteamVR_Actions.gameplay_DPadU_Ping;
            }
        }
        
        public virtual SteamVR_Action_Vector2 RS_Rotate
        {
            get
            {
                return SteamVR_Actions.gameplay_RS_Rotate;
            }
        }
        
        public virtual SteamVR_Action_Boolean R3_Speak
        {
            get
            {
                return SteamVR_Actions.gameplay_R3_Speak;
            }
        }
        
        public virtual SteamVR_Action_Boolean Back_ToggleBattleMenu
        {
            get
            {
                return SteamVR_Actions.gameplay_Back_ToggleBattleMenu;
            }
        }
        
        public virtual SteamVR_Action_Boolean Start_ToggleBackpack
        {
            get
            {
                return SteamVR_Actions.gameplay_Start_ToggleBackpack;
            }
        }
        
        public virtual SteamVR_Action_Vector2 Scroll
        {
            get
            {
                return SteamVR_Actions.gameplay_Scroll;
            }
        }
        
        public virtual SteamVR_Action_Boolean InteractUI
        {
            get
            {
                return SteamVR_Actions.gameplay_InteractUI;
            }
        }
        
        public virtual SteamVR_Action_Single LT_DualWieldFire
        {
            get
            {
                return SteamVR_Actions.gameplay_LT_DualWieldFire;
            }
        }
        
        public virtual SteamVR_Action_Boolean RB_DualWield2ndSkill
        {
            get
            {
                return SteamVR_Actions.gameplay_RB_DualWield2ndSkill;
            }
        }
        
        public virtual SteamVR_Action_Vibration HapticLeft
        {
            get
            {
                return SteamVR_Actions.gameplay_HapticLeft;
            }
        }
        
        public virtual SteamVR_Action_Vibration HapticRight
        {
            get
            {
                return SteamVR_Actions.gameplay_HapticRight;
            }
        }
    }
}
